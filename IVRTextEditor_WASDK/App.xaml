<Application
    x:Class="IVRTextEditor_WASDK.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:animatedvisuals="using:ABI.Microsoft.UI.Xaml.Controls.AnimatedVisuals">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary Source="/Styles/FontSizes.xaml" />
                <ResourceDictionary Source="/Styles/Thickness.xaml" />
                <ResourceDictionary Source="/Styles/TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <x:String x:Key="Print">ms-appx:///Assets/theme-light/Print.svg</x:String>
                    <x:String x:Key="Copy">ms-appx:///Assets/theme-light/Copy.svg</x:String>
                    <x:String x:Key="Cut">ms-appx:///Assets/theme-light/Cut.svg</x:String>
                    <x:String x:Key="Paste">ms-appx:///Assets/theme-light/Paste.svg</x:String>
                    <x:String x:Key="ZoomIn">ms-appx:///Assets/theme-light/ZoomIn.svg</x:String>
                    <x:String x:Key="ZoomOut">ms-appx:///Assets/theme-light/ZoomOut.svg</x:String>
                    <x:String x:Key="ZoomInDisabled">ms-appx:///Assets/theme-light/ZoomInDisabled.svg</x:String>
                    <x:String x:Key="ZoomOutDisabled">ms-appx:///Assets/theme-light/ZoomOutDisabled.svg</x:String>
                    <StaticResource x:Key="RibbonBackground" ResourceKey="SolidBackgroundFillColorTertiaryBrush" />
                    <SolidColorBrush x:Key="RibbonBorder"
                                             Color="#FFEBEBEB" />
                    <SolidColorBrush x:Key="RibbonColumnBorder"
                                             Color="#0F000000" />
                    <SolidColorBrush x:Key="EditorContentHost"
                                             Color="#F8F8F8" />
                    <SolidColorBrush x:Key="CButtonBackgroundPointerOver"
                                             Color="#11000000" />
                    <SolidColorBrush x:Key="CButtonBorderPointerOver"
                                             Color="#29000000" />


                    <SolidColorBrush x:Key="StatusBarBackground"
                                             Opacity="0.65"
                                             Color="#f3f3f3" />
                    <SolidColorBrush x:Key="StatusBarBorder"
                                             Opacity="0.0578"
                                             Color="#000000" />

                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <x:String x:Key="Print">ms-appx:///Assets/theme-dark/Print.svg</x:String>
                    <x:String x:Key="Copy">ms-appx:///Assets/theme-dark/Copy.svg</x:String>
                    <x:String x:Key="Cut">ms-appx:///Assets/theme-dark/Cut.svg</x:String>
                    <x:String x:Key="Paste">ms-appx:///Assets/theme-dark/Paste.svg</x:String>
                    <x:String x:Key="ZoomIn">ms-appx:///Assets/theme-dark/ZoomIn.svg</x:String>
                    <x:String x:Key="ZoomOut">ms-appx:///Assets/theme-dark/ZoomOut.svg</x:String>
                    <x:String x:Key="ZoomInDisabled">ms-appx:///Assets/theme-dark/ZoomInDisabled.svg</x:String>
                    <x:String x:Key="ZoomOutDisabled">ms-appx:///Assets/theme-dark/ZoomOutDisabled.svg</x:String>
                    <StaticResource x:Key="RibbonBackground" ResourceKey="SolidBackgroundFillColorTertiaryBrush" />
                    <SolidColorBrush x:Key="RibbonBorder"
                                             Color="#1C1C1C" />
                    <SolidColorBrush x:Key="RibbonColumnBorder"
                                             Color="#15FFFFFF" />
                    <SolidColorBrush x:Key="EditorContentHost"
                                             Color="#303030" />
                    <SolidColorBrush x:Key="CButtonBackgroundPointerOver"
                                             Color="#10FFFFFF" />
                    <SolidColorBrush x:Key="CButtonBorderPointerOver"
                                             Color="#09FFFFFF" />


                    <SolidColorBrush x:Key="StatusBarBackground"
                                             Color="Transparent" />
                    <SolidColorBrush x:Key="StatusBarBorder"
                                             Opacity="0.1"
                                             Color="#000000" />

                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
            <Style x:Key="TabViewItemStyle1" TargetType="TabViewItem">
                <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="MinHeight" Value="{ThemeResource TabViewItemMinHeight}" />
                <Setter Property="BorderThickness" Value="{ThemeResource TabViewItemBorderThickness}" />
                <Setter Property="BorderBrush" Value="{ThemeResource TabViewItemBorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabViewItem">
                            <Grid
x:Name="LayoutRoot"
Height="35"
Margin="0,-1,0,0"
Padding="{TemplateBinding Padding}"
Background="#00B87171"
BorderThickness="1"
CornerRadius="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftColumn" Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition x:Name="RightColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="LayoutRootScale" />
                                </Grid.RenderTransform>
                                <Path
    x:Name="LeftRadiusRenderArc"
    Width="4"
    Height="4"
    Margin="-4,0,0,0"
    VerticalAlignment="Bottom"
    x:Load="False"
    Data="M4 0C4 1.19469 3.47624 2.26706 2.64582 3H0C1.65685 3 3 1.65685 3 0H4Z"
    Fill="{ThemeResource CardStrokeColorDefault}"
    Visibility="Collapsed" />
                                <Path
    x:Name="LeftRadiusRenderTriangle"
    Margin="-4,0,0,0"
    VerticalAlignment="Bottom"
    x:Load="False"
    Data="M0 4H4V0C4 2.20914 2.20914 4 0 4Z"
    Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}"
    Visibility="Collapsed" />
                                <Path
    x:Name="RightRadiusRenderArc"
    Grid.Column="2"
    Width="4"
    Height="4"
    Margin="0,0,-4,0"
    VerticalAlignment="Bottom"
    x:Load="False"
    Data="M0 0C0 1.19469 0.523755 2.26706 1.35418 3H4C2.34315 3 1 1.65685 1 0H0Z"
    Fill="{ThemeResource CardStrokeColorDefault}"
    Visibility="Collapsed" />
                                <Path
    x:Name="RightRadiusRenderTriangle"
    Grid.Column="2"
    Margin="0,0,-4,0"
    VerticalAlignment="Bottom"
    x:Load="False"
    Data="M4 4H0V0C0 2.20914 1.79086 4 4 4Z"
    Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}"
    Visibility="Collapsed" />
                                <Border
    x:Name="TabSeparator"
    Grid.Column="1"
    Width="1"
    Height="18"
    Margin="0,8"
    HorizontalAlignment="Right"
    BorderBrush="{ThemeResource TabViewItemSeparator}"
    BorderThickness="1" />
                                <Grid
    x:Name="TabContainer"
    Grid.Column="1"
    Padding="{ThemeResource TabViewItemHeaderPadding}"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    Control.IsTemplateFocusTarget="True"
    CornerRadius="4"
    FocusVisualMargin="{TemplateBinding FocusVisualMargin}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Viewbox
        x:Name="IconBox"
        MaxWidth="{ThemeResource TabViewItemHeaderIconSize}"
        MaxHeight="{ThemeResource TabViewItemHeaderIconSize}"
        Margin="0,2,8,0">
                                        <ContentControl
            x:Name="IconControl"
            Content="{Binding TabViewTemplateSettings.IconElement, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            FontSize="10"
            Foreground="{ThemeResource TabViewItemIconForeground}"
            HighContrastAdjustment="None"
            IsTabStop="False" />
                                    </Viewbox>
                                    <ContentPresenter
        x:Name="ContentPresenter"
        Grid.Column="1"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Content="{Binding title}"
        ContentTemplate="{TemplateBinding HeaderTemplate}"
        ContentTransitions="{TemplateBinding ContentTransitions}"
        FontSize="13"
        FontWeight="{TemplateBinding FontWeight}"
        Foreground="{ThemeResource TabViewItemHeaderForeground}"
        HighContrastAdjustment="None"
        OpticalMarginAlignment="TrimSideBearings" />
                                    <Button
        x:Name="CloseButton"
        Grid.Column="2"
        Width="24"
        Height="24"
        Margin="{ThemeResource TabViewItemHeaderCloseMargin}"
        Padding="12,4"
        FontSize="12"
        HighContrastAdjustment="None"
        IsTabStop="False"
        IsTextScaleFactorEnabled="False"
        Style="{ThemeResource TabViewCloseButtonStyle}">
                                        <Button.Content>
                                            <Viewbox Width="12" Height="12">
                                                <SymbolIcon Symbol="Cancel" />
                                            </Viewbox>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonForeground}" />
                                                <Setter Target="TabSeparator.Opacity" Value="0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource tabColor}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonForeground}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.BorderBrush" Value="#26767676" />
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource tabColor}" />
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.BorderBrush" Value="#26767676" />
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource tabColor}" />
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="LayoutRoot.BorderBrush" Value="#26767676" />
                                                <Setter Target="RightRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="LeftRadiusRenderArc.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Visibility" Value="Visible" />
                                                <Setter Target="LeftRadiusRenderTriangle.Fill" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="TabContainer.Margin" Value="{ThemeResource TabViewSelectedItemHeaderMargin}" />
                                                <Setter Target="TabContainer.BorderBrush" Value="{ThemeResource TabViewSelectedItemBorderBrush}" />
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource tabColor}" />
                                                <Setter Target="TabContainer.Padding" Value="{ThemeResource TabViewSelectedItemHeaderPadding}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                <Setter Target="ContentPresenter.FontWeight" Value="SemiBold" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundDisabled}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonBackground}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonForeground}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable" />
                                        <VisualState x:Name="DataPlaceholder" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ReorderHintStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NoReorderHint" />
                                        <VisualState x:Name="BottomReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                    Direction="Bottom"
                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="TopReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                    Direction="Top"
                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="RightReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                    Direction="Right"
                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LeftReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                    Direction="Left"
                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DragStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NotDragging" />
                                        <VisualState x:Name="Dragging">
                                            <Storyboard>
                                                <DoubleAnimation
                    Storyboard.TargetName="LayoutRoot"
                    Storyboard.TargetProperty="Opacity"
                    To="{ThemeResource ListViewItemDragThemeOpacity}"
                    Duration="0" />
                                                <DragItemThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="DraggingTarget" />
                                        <VisualState x:Name="MultipleDraggingPrimary" />
                                        <VisualState x:Name="MultipleDraggingSecondary" />
                                        <VisualState x:Name="DraggedPlaceholder" />
                                        <VisualState x:Name="Reordering">
                                            <Storyboard>
                                                <DoubleAnimation
                    Storyboard.TargetName="LayoutRoot"
                    Storyboard.TargetProperty="Opacity"
                    To="{ThemeResource ListViewItemReorderThemeOpacity}"
                    Duration="0:0:0.240" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ReorderingTarget">
                                            <Storyboard>
                                                <DoubleAnimation
                    Storyboard.TargetName="LayoutRoot"
                    Storyboard.TargetProperty="Opacity"
                    To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
                    Duration="0:0:0.240" />
                                                <DoubleAnimation
                    Storyboard.TargetName="LayoutRootScale"
                    Storyboard.TargetProperty="ScaleX"
                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                    Duration="0:0:0.240" />
                                                <DoubleAnimation
                    Storyboard.TargetName="LayoutRootScale"
                    Storyboard.TargetProperty="ScaleY"
                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                    Duration="0:0:0.240" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MultipleReorderingPrimary" />
                                        <VisualState x:Name="ReorderedPlaceholder">
                                            <Storyboard>
                                                <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="DragOver">
                                            <Storyboard>
                                                <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="IconStates">
                                        <VisualState x:Name="Icon" />
                                        <VisualState x:Name="NoIcon">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="TabWidthModes">
                                        <VisualState x:Name="StandardWidth" />
                                        <VisualState x:Name="Compact">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Margin" Value="0,0,0,0" />
                                                <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                                <Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CloseIconStates">
                                        <VisualState x:Name="CloseButtonVisible" />
                                        <VisualState x:Name="CloseButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup>
                                        <VisualState x:Name="ForegroundNotSet" />
                                        <VisualState x:Name="ForegroundSet">
                                            <VisualState.Setters>
                                                <Setter Target="IconControl.Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PaintUIButtonStyle"
                           TargetType="Button">
                <Setter Property="Background"
                                Value="Transparent" />
                <Setter Property="BackgroundSizing"
                                Value="OuterBorderEdge" />
                <Setter Property="BorderBrush"
                                Value="Transparent" />
                <Setter Property="BorderThickness"
                                Value="{ThemeResource ButtonBorderThemeThickness}" />
                <Setter Property="Padding"
                                Value="0" />
                <Setter Property="CornerRadius"
                                Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="HorizontalAlignment"
                                Value="Left" />
                <Setter Property="VerticalAlignment"
                                Value="Center" />
                <Setter Property="FontFamily"
                                Value="Segoe Fluent Icons" />
                <Setter Property="FontWeight"
                                Value="Normal" />
                <Setter Property="FontSize"
                                Value="16" />
                <Setter Property="HorizontalContentAlignment"
                                Value="Center" />
                <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                <Setter Property="UseSystemFocusVisuals"
                                Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin"
                                Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter x:Name="ContentPresenter"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      Background="{TemplateBinding Background}"
                                                      BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      CornerRadius="{TemplateBinding CornerRadius}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Padding="{TemplateBinding Padding}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource CButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource CButtonBorderPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="Transparent" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PaintUIToggleButtonStyle"
               TargetType="ToggleButton">
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BackgroundSizing"
                    Value="InnerBorderEdge" />
                <Setter Property="BorderBrush"
                    Value="{ThemeResource AccentFillColorDefaultBrush}" />
                <Setter Property="Foreground"
                    Value="{ThemeResource ButtonForeground}" />
                <Setter Property="BackgroundSizing"
                    Value="OuterBorderEdge" />
                <Setter Property="BorderThickness"
                    Value="0" />
                <Setter Property="FontFamily"
                    Value="Segoe Fluent Icons" />
                <Setter Property="FontWeight"
                    Value="Normal" />
                <Setter Property="FontSize"
                    Value="16" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalAlignment"
                    Value="Center" />
                <Setter Property="CornerRadius"
                    Value="4" />
                <Setter Property="Padding"
                    Value="0" />
                <Setter Property="ToolTipService.Placement"
                    Value="Mouse" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ContentPresenter x:Name="ContentPresenter"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Background="{TemplateBinding Background}"
                                          BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          CornerRadius="{TemplateBinding CornerRadius}"
                                          Content="{TemplateBinding Content}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource CButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource CButtonBorderPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(BorderThickness)"
                                                    Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(BorderThickness)"
                                                    Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(BorderThickness)"
                                                    Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(BorderThickness)"
                                                    Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundIndeterminate}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                           Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PaintUISplitButtonStyle"
               TargetType="SplitButton">
                <Setter Property="Background"
                    Value="{ThemeResource SplitButtonBackground}" />
                <Setter Property="Foreground"
                    Value="{ThemeResource SplitButtonForeground}" />
                <Setter Property="BorderBrush"
                    Value="{ThemeResource SplitButtonBorderBrush}" />
                <Setter Property="BorderThickness"
                    Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment"
                    Value="Left" />
                <Setter Property="VerticalAlignment"
                    Value="Center" />
                <Setter Property="FontFamily"
                    Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight"
                    Value="Normal" />
                <Setter Property="FontSize"
                    Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals"
                    Value="True" />
                <Setter Property="FocusVisualMargin"
                    Value="-1" />
                <Setter Property="IsTabStop"
                    Value="True" />
                <Setter Property="Padding"
                    Value="{ThemeResource ButtonPadding}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitButton">
                            <Grid x:Name="RootGrid"
                              Background="Transparent">
                                <Grid.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground"
                                            Value="{ThemeResource SplitButtonForeground}" />
                                        <Setter Property="BorderBrush"
                                            Value="Transparent" />
                                        <Setter Property="BorderThickness"
                                            Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                        <Setter Property="HorizontalAlignment"
                                            Value="Left" />
                                        <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                        <Setter Property="FontFamily"
                                            Value="{ThemeResource ContentControlThemeFontFamily}" />
                                        <Setter Property="FontWeight"
                                            Value="Normal" />
                                        <Setter Property="FontSize"
                                            Value="{ThemeResource ControlContentThemeFontSize}" />
                                        <Setter Property="UseSystemFocusVisuals"
                                            Value="{StaticResource UseSystemFocusVisuals}" />
                                        <Setter Property="FocusVisualMargin"
                                            Value="-3" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="RootGrid"
                                                      Background="Transparent">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />
                                                                <VisualState x:Name="PointerOver">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                            Value="PointerOver" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                            Value="Pressed" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.Foreground"
                                                                            Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                        <Setter Target="RootGrid.Background"
                                                                            Value="{ThemeResource SplitButtonBackgroundDisabled}" />
                                                                        <Setter Target="ContentPresenter.BorderBrush"
                                                                            Value="Transparent" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                      AutomationProperties.AccessibilityView="Raw"
                                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      Content="{TemplateBinding Content}"
                                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      Padding="{TemplateBinding Padding}"
                                                                      AnimatedIcon.State="Normal"
                                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <Grid.CornerRadius>
                                    <ThemeResource ResourceKey="ControlCornerRadius" />
                                </Grid.CornerRadius>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PrimaryButtonColumn"
                                                  MinWidth="32"
                                                  Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32" />
                                    <RowDefinition Height="16" />
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush"
                                                    Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background"
                                                    Value="Transparent" />
                                                <Setter Target="RootGrid.Background"
                                                    Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="FlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.Background"
                                                    Value="Transparent" />
                                                <Setter Target="SecondaryButton.BorderBrush"
                                                    Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="TouchPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedFlyoutOpen">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedTouchPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Button x:Name="PrimaryButton"
                                    Style="{StaticResource PaintUIButtonStyle}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Command="{TemplateBinding Command}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CommandParameter="{TemplateBinding CommandParameter}"
                                    Content="{TemplateBinding Content}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsTabStop="False"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    VerticalAlignment="Stretch" />
                                <Button x:Name="SecondaryButton"
                                    Style="{StaticResource PaintUIButtonStyle}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    IsTabStop="False"
                                    VerticalContentAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                    <FontIcon Glyph="&#xe70d;"
                                          FontWeight="Black"
                                          FontSize="8" />
                                </Button>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PaintUIHorizontalSplitButton" TargetType="SplitButton">
                <Setter Property="Background" Value="{ThemeResource SplitButtonBackground}"/>
                <Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource SplitButtonBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="FocusVisualMargin" Value="-1"/>
                <Setter Property="IsTabStop" Value="True"/>
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitButton">
                            <Grid x:Name="RootGrid" Background="Transparent">
                                <Grid.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                                        <Setter Property="FocusVisualMargin" Value="-3"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="RootGrid" Background="Transparent">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal"/>
                                                                <VisualState x:Name="PointerOver">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver"/>
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed"/>
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}"/>
                                                                        <Setter Target="RootGrid.Background" Value="{ThemeResource SplitButtonBackgroundDisabled}"/>
                                                                        <Setter Target="ContentPresenter.BorderBrush" Value="Transparent"/>
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" AnimatedIcon.State="Normal" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <Grid.CornerRadius>
                                    <ThemeResource ResourceKey="ControlCornerRadius"/>
                                </Grid.CornerRadius>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PrimaryButtonColumn" MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" Width="*"/>
                                    <ColumnDefinition x:Name="Separator" Width="1"/>
                                    <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent"/>
                                                <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent"/>
                                                <Setter Target="RootGrid.Background" Value="Transparent"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="FlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="TouchPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPointerOver}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundSecondaryPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedFlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedTouchPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPressed">
                                            <VisualState.Setters>
                                                <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}"/>
                                                <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                        <VisualState x:Name="SecondaryButtonRight"/>
                                        <VisualState x:Name="SecondaryButtonSpan">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.(Grid.Column)" Value="0"/>
                                                <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Button x:Name="PrimaryButton" Style="{StaticResource PaintUIButtonStyle}" AutomationProperties.AccessibilityView="Raw" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Command="{TemplateBinding Command}" ContentTemplate="{TemplateBinding ContentTemplate}" CommandParameter="{TemplateBinding CommandParameter}" Grid.Column="0" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Stretch" Padding="10,3,11,3"/>
                                <Button x:Name="SecondaryButton" Style="{StaticResource PaintUIButtonStyle}" AutomationProperties.AccessibilityView="Raw" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Grid.Column="2" Foreground="{ThemeResource SplitButtonForegroundSecondary}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" Padding="0,0,12,0" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                                    <AnimatedIcon AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Right" Height="12" VerticalAlignment="Center" Width="12">
                                        <AnimatedIcon.FallbackIconSource>
                                            <FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="8" Glyph="&#xE96E;" IsTextScaleFactorEnabled="False"/>
                                        </AnimatedIcon.FallbackIconSource>
                                    </AnimatedIcon>
                                </Button>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PaintUISplitButtonStyleSE"
               TargetType="SplitButton">
                <Setter Property="Background"
                    Value="{ThemeResource SplitButtonBackground}" />
                <Setter Property="Foreground"
                    Value="{ThemeResource SplitButtonForeground}" />
                <Setter Property="BorderBrush"
                    Value="{ThemeResource SplitButtonBorderBrush}" />
                <Setter Property="BorderThickness"
                    Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment"
                    Value="Left" />
                <Setter Property="VerticalAlignment"
                    Value="Center" />

                <Setter Property="UseSystemFocusVisuals"
                    Value="True" />
                <Setter Property="FocusVisualMargin"
                    Value="-1" />
                <Setter Property="IsTabStop"
                    Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="SplitButton">
                            <Grid x:Name="RootGrid"
                              Background="Transparent">
                                <Grid.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Foreground"
                                            Value="{ThemeResource SplitButtonForeground}" />
                                        <Setter Property="BorderBrush"
                                            Value="Transparent" />
                                        <Setter Property="BorderThickness"
                                            Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                        <Setter Property="UseSystemFocusVisuals"
                                            Value="{StaticResource UseSystemFocusVisuals}" />
                                        <Setter Property="FocusVisualMargin"
                                            Value="-3" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="RootGrid"
                                                      Background="Transparent">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />
                                                                <VisualState x:Name="PointerOver">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                            Value="PointerOver" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                            Value="Pressed" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="ContentPresenter.Foreground"
                                                                            Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                        <Setter Target="RootGrid.Background"
                                                                            Value="{ThemeResource SplitButtonBackgroundDisabled}" />
                                                                        <Setter Target="ContentPresenter.BorderBrush"
                                                                            Value="Transparent" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>

                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <Grid.CornerRadius>
                                    <ThemeResource ResourceKey="ControlCornerRadius" />
                                </Grid.CornerRadius>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PrimaryButtonColumn"
                                                  MinWidth="32"
                                                  Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32" />
                                    <RowDefinition Height="16" />
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush"
                                                    Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                                <Setter Target="PrimaryBackgroundGrid.Background"
                                                    Value="Transparent" />
                                                <Setter Target="RootGrid.Background"
                                                    Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="FlyoutOpen">
                                            <VisualState.Setters>
                                                <Setter Target="SecondaryButton.Background"
                                                    Value="Transparent" />
                                                <Setter Target="SecondaryButton.BorderBrush"
                                                    Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="TouchPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PrimaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SecondaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedFlyoutOpen">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedTouchPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPrimaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPointerOver">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedSecondaryPressed">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Button x:Name="PrimaryButton"
                                    Style="{StaticResource PaintUIButtonStyle}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Command="{TemplateBinding Command}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CommandParameter="{TemplateBinding CommandParameter}"
                                    Content="{TemplateBinding Content}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsTabStop="False"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    VerticalAlignment="Stretch" />
                                <Button x:Name="SecondaryButton"
                                    Style="{StaticResource PaintUIButtonStyle}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    IsTabStop="False"
                                    VerticalContentAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                    <FontIcon Glyph="&#xe70d;"
                                          FontWeight="Black"
                                          FontSize="8" />
                                </Button>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ColumnDescriptionTextblockStyle"
                           BasedOn="{StaticResource BodyTextBlockStyle}"
                           TargetType="TextBlock">
                <Setter Property="FontSize"
                                Value="12" />
                <Setter Property="Foreground"
                                Value="{ThemeResource TextFillColorSecondaryBrush}" />

                <Setter Property="HorizontalAlignment"
                                Value="Center" />
                <Setter Property="VerticalAlignment"
                                Value="Center" />

                <Setter Property="MaxWidth"
                                Value="100" />
                <Setter Property="FontFamily"
                                Value="Segoe UI Variable" />
            </Style>

            <Style x:Key="MenuButton"
                           TargetType="Button">
                <Setter Property="Background"
                                Value="Transparent" />
                <Setter Property="Foreground"
                                Value="{ThemeResource ButtonForeground}" />
                <Setter Property="BorderThickness"
                                Value="0" />
                <Setter Property="FontFamily"
                                Value="Segoe Fluent Icons" />
                <Setter Property="FontWeight"
                                Value="Normal" />
                <Setter Property="FontSize"
                                Value="16" />
                <Setter Property="VerticalAlignment"
                                Value="Center" />
                <Setter Property="Width"
                                Value="32" />
                <Setter Property="Height"
                                Value="32" />
                <Setter Property="Margin"
                                Value="4" />
                <Setter Property="CornerRadius"
                                Value="4" />
                <Setter Property="Padding"
                                Value="0" />
                <Setter Property="ToolTipService.Placement"
                                Value="Mouse" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter x:Name="ContentPresenter"
                                                      AutomationProperties.AccessibilityView="Raw"
                                                      Background="{TemplateBinding Background}"
                                                      BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      CornerRadius="{TemplateBinding CornerRadius}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      AnimatedIcon.State="Normal"
                                                      Padding="{TemplateBinding Padding}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.BackgroundTransition>
                                    <BrushTransition Duration="0:0:0.083" />
                                </ContentPresenter.BackgroundTransition>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                Value="PointerOver" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource MenuBarItemBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                Value="Pressed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource ButtonForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <VisualState.Setters>
                                                <!-- DisabledVisual Should be handled by the control, not the animated icon. -->
                                                <Setter Target="ContentPresenter.(AnimatedIcon.State)"
                                                                Value="Normal" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MinEditStyle"
                           TargetType="RichEditBox">
                <Setter Property="Foreground"
                                Value="{ThemeResource TextControlForeground}" />
                <Setter Property="Background"
                                Value="{ThemeResource TextControlBackground}" />
                <!--<Setter Property="ContentLinkForegroundColor"
                                Value="{ThemeResource ContentLinkForegroundColor}" />
                <Setter Property="ContentLinkBackgroundColor"
                                Value="{ThemeResource ContentLinkBackgroundColor}" />-->
                <Setter Property="SelectionHighlightColor"
                                Value="{ThemeResource TextControlSelectionHighlightColor}" />
                <Setter Property="BorderBrush"
                                Value="{ThemeResource TextControlBorderBrush}" />
                <Setter Property="BorderThickness"
                                Value="{ThemeResource TextControlBorderThemeThickness}" />
                <Setter Property="FontFamily"
                                Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize"
                                Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="ScrollViewer.HorizontalScrollMode"
                                Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollMode"
                                Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                                Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                                Value="Auto" />
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
                                Value="False" />
                <Setter Property="TextWrapping"
                                Value="Wrap" />
                <Setter Property="Padding"
                                Value="{ThemeResource TextControlThemePadding}" />
                <Setter Property="UseSystemFocusVisuals"
                                Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
                <Setter Property="ContextFlyout"
                                Value="{StaticResource TextControlCommandBarContextFlyout}" />
                <Setter Property="SelectionFlyout"
                                Value="{StaticResource TextControlCommandBarSelectionFlyout}" />
                <Setter Property="CornerRadius"
                                Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RichEditBox">
                            <Grid>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">

                                        <VisualState x:Name="Disabled">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Focused">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                    Value="{ThemeResource TextControlForegroundFocused}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ContentPresenter x:Name="HeaderContentPresenter"
                                                          Grid.Row="0"
                                                          Foreground="{ThemeResource TextControlHeaderForeground}"
                                                          Margin="{ThemeResource RichEditBoxTopHeaderMargin}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          FontWeight="Normal"
                                                          TextWrapping="Wrap"
                                                          VerticalAlignment="Top"
                                                          Visibility="Collapsed"
                                                          x:DeferLoadStrategy="Lazy" />
                                <ScrollViewer x:Name="ContentElement"
                                                      Grid.Row="1"
                                                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                      Margin="{TemplateBinding BorderThickness}"
                                                      Padding="{TemplateBinding Padding}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsTabStop="False"
                                                      ZoomMode="Disabled"
                                                      AutomationProperties.AccessibilityView="Raw" />
                                <TextBlock x:Name="PlaceholderTextContentPresenter"
                                                   Grid.Row="1"
                                                   Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                                   Margin="{TemplateBinding BorderThickness}"
                                                   Padding="{TemplateBinding Padding}"
                                                   Text="{TemplateBinding PlaceholderText}"
                                                   TextAlignment="{TemplateBinding TextAlignment}"
                                                   TextWrapping="{TemplateBinding TextWrapping}"
                                                   IsHitTestVisible="False" />
                                <ContentPresenter x:Name="DescriptionPresenter"
                                                          Grid.Row="2"
                                                          Content="{TemplateBinding Description}"
                                                          Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}"
                                                          AutomationProperties.AccessibilityView="Raw"
                                                          x:Load="False" />

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <FontFamily x:Key="CustomIconFont">/Assets/WordPadIcons.ttf#WordPad Fluent Icons</FontFamily>
        </ResourceDictionary>
    </Application.Resources>
</Application>

